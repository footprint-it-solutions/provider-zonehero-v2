{"format_version":"1.0","provider_schemas":{"registry.terraform.io/orographiclift/hlb":{"provider":{"version":0,"block":{"attributes":{"api_key":{"type":"string","description":"API key for HLB authentication. Can also be set with the HLB_API_KEY environment variable.","description_kind":"plain","required":true,"sensitive":true},"aws_profile":{"type":"string","description":"AWS profile name. Can also be set with the AWS_PROFILE environment variable.","description_kind":"plain","optional":true},"aws_region":{"type":"string","description":"AWS region. Can also be set with the AWS_REGION environment variable.","description_kind":"plain","optional":true},"partition":{"type":"string","description":"AWS partition to use. Defaults to 'aws'.","description_kind":"plain","optional":true}},"description":"Interact with HLB (Hero Load Balancer).","description_kind":"plain"}},"resource_schemas":{"hlb_listener_attachment":{"version":0,"block":{"attributes":{"alpn_policy":{"type":"string","description":"The Application-Layer Protocol Negotiation (ALPN) policy to use. Valid values:\n\n* `HTTP1Only` - Only allow HTTP/1.* connections\n* `HTTP2Only` - Only allow HTTP/2 connections\n* `HTTP2Optional` - Prefer HTTP/1.*, but allow HTTP/2 if client supports it\n* `HTTP2Preferred` - Prefer HTTP/2, but allow HTTP/1.* if client doesn't support HTTP/2\n* `None` - Do not use ALPN","description_kind":"markdown","optional":true},"certificate_secrets_name":{"type":"string","description":"The name of the secret in AWS Secrets Manager containing the SSL server certificate. This field is required if the protocol is HTTPS. The secret should contain the certificate and private key in PEM format.","description_kind":"markdown","optional":true},"enable_deletion_protection":{"type":"bool","description":"If true, deletion of the listener will be disabled via the API. This prevents accidental deletion of production listeners. You must set this to false and apply the change before you can delete the listener.","description_kind":"markdown","optional":true,"computed":true},"id":{"type":"string","description_kind":"plain","computed":true},"load_balancer_id":{"type":"string","description":"The ID of the HLB load balancer to attach this listener to. This cannot be changed once the listener is created - you must create a new listener to move it to a different load balancer.","description_kind":"markdown","required":true},"overprovisioning_factor":{"type":"number","description":"When the load balancer `enable_cross_zone_load_balancing` is set to `avoid` (default), this factor determines how much traffic a single instance can receive relative to the average. For example, with a value of `1.1`, an instance can receive up to 110% of the average traffic. This helps optimize resource usage while maintaining zone isolation. Must be greater than or equal to 1.0. Applies to the target group - behavior is undefined if different values are assigned to different listeners with the same target group.","description_kind":"markdown","optional":true,"computed":true},"port":{"type":"number","description":"The port on which the load balancer is listening. Must be between 1 and 65535. Common ports:\n\n* 80 - HTTP\n* 443 - HTTPS\n\nNote: The security groups associated with the load balancer must allow inbound traffic on this port.","description_kind":"markdown","required":true},"protocol":{"type":"string","description":"The protocol for connections from clients to the load balancer. Valid values:\n\n* `HTTP` - For unencrypted HTTP traffic\n* `HTTPS` - For encrypted HTTPS traffic. When using HTTPS, you must also specify a `certificate_secrets_name`\n\n* `UDP` - For raw unencrypted UDP traffic\n\nThe protocol cannot be changed after the listener is created - you must create a new listener to change protocols.","description_kind":"markdown","required":true},"target_group_arn":{"type":"string","description":"The Amazon Resource Name (ARN) of the target group to route traffic to. The target group defines where traffic will be sent (the backend instances, IP addresses, or other resources) and how health checks are performed. The target group must be in the same region as the load balancer.","description_kind":"markdown","required":true}},"description":"Manages an HLB Listener Attachment","description_kind":"plain"}},"hlb_load_balancer":{"version":0,"block":{"attributes":{"access_logs":{"nested_type":{"attributes":{"bucket":{"type":"string","description":"The name of the S3 bucket where access logs will be stored. The load balancer must have permissions to write to this bucket. You can use an existing bucket or create a new one. Make sure the bucket policy allows the load balancer to write logs.","description_kind":"markdown","required":true},"enabled":{"type":"bool","description":"Whether to enable access logs","description_kind":"plain","optional":true,"computed":true},"prefix":{"type":"string","description":"The prefix (logical hierarchy) in the S3 bucket under which the logs are stored. If not specified, logs are stored in the root of the bucket. Example: `my-app/prod/` will store logs under that directory structure in the bucket.","description_kind":"markdown","optional":true}},"nesting_mode":"single"},"description":"Configuration block for access log settings. Access logs capture detailed information about requests sent to your load balancer. Each log contains information such as the time the request was received, client's IP address, latencies, request paths, and server responses. This can be useful for:\n\n* Analyzing traffic patterns\n* Troubleshooting issues\n* Security analysis\n\nThe logs are stored in the specified S3 bucket and can be analyzed using tools like Amazon Athena.","description_kind":"markdown","optional":true},"client_keep_alive":{"type":"number","description":"The time in seconds to keep client connections alive (60-604800 seconds, default 3600). This setting determines how long the load balancer maintains idle keepalive connections with clients. Longer values can improve performance by reducing connection establishment overhead, but consume more resources.","description_kind":"markdown","optional":true,"computed":true},"connection_draining_timeout":{"type":"number","description":"When a scale-in event occurs, load balancer nodes are taken out of the DNS record immediately but we wait for `connection_draining_timeout` minutes before terminating the instances. This is most useful with HTTP clients that do not respect DNS TLL.","description_kind":"markdown","optional":true,"computed":true},"dns_name":{"type":"string","description":"The DNS name of the load balancer","description_kind":"plain","computed":true},"ec2_iam_role":{"type":"string","description":"Allows the user to assign a role permitting root access to proxy instances via AWS SSM. It is *stronly discouraged* to change this value as this compromises security on many levels. Use only to perfom audits. Valid values are:\n* `lb-standard` (default)\n* `lb-ssm`\nThe role will only be applied to newly created proxy instances, you must trigger an Autoscaling Group Instance Refresh manually for this change to take effect immediately.","description_kind":"markdown","optional":true,"computed":true},"enable_cross_zone_load_balancing":{"type":"string","description":"Configures how the load balancer distributes traffic between Availability Zones. Valid values:\n\n* `full` - Distributes traffic evenly across all instances in all zones\n* `avoid` (default) - Attempts to distribute traffic within a zone first, only sending cross-zone traffic when necessary\n* `off` - Keeps traffic within the same zone\n\nThe `avoid` mode helps optimize for both availability and performance while minimizing cross-AZ data transfer costs.","description_kind":"markdown","optional":true,"computed":true},"enable_deletion_protection":{"type":"bool","description":"If true, deletion of the load balancer will be disabled via the API. This prevents accidental deletion of production load balancers. You must set this to false and apply the change before you can delete the load balancer.","description_kind":"markdown","optional":true,"computed":true},"enable_http2":{"type":"bool","description":"Indicates whether HTTP/2 is enabled. HTTP/2 provides improved performance through features like multiplexing, header compression, and server push. Enabled by default. Only disable this if you have specific compatibility requirements with HTTP/1.x.","description_kind":"markdown","optional":true,"computed":true},"id":{"type":"string","description_kind":"plain","computed":true},"idle_timeout":{"type":"number","description":"The time in seconds that a connection is allowed to be idle (no data transfer) before it is closed by the load balancer. Valid values are 1-4000 seconds. Default is 60 seconds. Increase this if your application requires longer-lived idle connections.","description_kind":"markdown","optional":true,"computed":true},"internal":{"type":"bool","description":"If true, the load balancer will be internal (private). Internal load balancers route traffic within your VPC and are not accessible from the internet. Use this for internal services or when you want to restrict access to your VPC. This cannot be changed after creation.","description_kind":"markdown","optional":true,"computed":true},"ip_address_type":{"type":"string","description":"The type of IP addresses used by the subnets for your load balancer. Valid values:\n\n* `ipv4` (default) - The load balancer has IPv4 addresses only\n* `dualstack` - The load balancer has both IPv4 and IPv6 addresses\n* `dualstack-without-public-ipv4` - The load balancer has IPv6 addresses and private IPv4 addresses\n\nChoose based on your application's networking requirements and client compatibility needs.","description_kind":"markdown","optional":true,"computed":true},"launch_config":{"nested_type":{"attributes":{"instance_type":{"type":"string","description":"The EC2 instance type to use for the load balancer nodes. If not specified, the backend will choose an appropriate default (currently c7g.medium). Choose a larger instance type if you expect high traffic volumes or need more CPU/memory resources.","description_kind":"markdown","optional":true},"max_instance_count":{"type":"number","description":"The maximum number of instances to maintain (integer, minimum 1). This will be rounded down to a multiple of the number of Availability Zones. If not specified, the backend will choose 10 times the minimum instance count. This allows for substantial traffic spikes.","description_kind":"markdown","optional":true},"min_instance_count":{"type":"number","description":"The minimum number of instances to maintain (integer, minimum 1). This will be rounded up to a multiple of the number of Availability Zones to ensure high availability. If not specified, the backend will choose an set this value to the number of AZs.","description_kind":"markdown","optional":true},"target_cpu_usage":{"type":"number","description":"The target CPU usage percentage (10-90) for auto-scaling. The load balancer will add or remove instances to maintain this target CPU usage. Lower values result in more aggressive scaling out, while higher values optimize resource usage but may impact performance during traffic spikes.","description_kind":"markdown","optional":true}},"nesting_mode":"single"},"description":"Configuration block for customizing how the load balancer instances are launched and scaled. This allows you to control the instance type, count, and scaling behavior. If not specified, the backend will use default values. It is recommended that you customize these settings to get the best performance / cost ratio,The best parameters can usually only be determined empirically with a righ-sizing exercise.","description_kind":"markdown","optional":true},"name":{"type":"string","description":"The name of the load balancer. Must be unique within your account, max 32 characters, alphanumeric and hyphens only. This name will be used in DNS records and AWS resource names, so choose something meaningful and compliant with DNS naming conventions.","description_kind":"markdown","required":true},"name_prefix":{"type":"string","description":"Creates a unique name beginning with the specified prefix. Use this when you want Terraform to generate unique names for multiple load balancers. The prefix must be 1-6 characters long. Conflicts with the `name` attribute - you can only use one or the other.","description_kind":"markdown","optional":true},"preferred_maintenance_window":{"type":"string","description":"Specifies a time window during which load balancer node forced replacement should preferably occur. An empty string is a valid value. The format is `ddd-ddd,hh24:mm-hh24:mm` where:\n\n* `ddd-ddd` represents a day range (e.g., `mon-fri` for Monday to Friday)\n* `hh24:mm-hh24:mm` represents a time range in 24-hour format in UTC (e.g., `01:00-03:00` for 1 AM to 3 AM UTC)\n\n**Important:** All times are in UTC. The day of the week refers to the start time of the window. For time ranges that cross midnight, the window will finish on the next day.\n\nExamples:\n* `mon-wed,02:00-04:00` - Monday through Wednesday, between 2 AM and 4 AM UTC\n* `mon-fri,23:00-02:00` - Monday through Friday, starting at 11 PM UTC each day and ending at 2 AM UTC the following day. The last window starts at 11 PM UTC Friday and ends at 2 AM UTC Saturday\n\nWhen updates to the load balancer nodes are available, newly started instances always use the newest version, and older versions are progressively phased out as scale-in events occur. Additionally, any remaining instances running out-of-date versions will be automatically replaced during the specified maintenance window.\n\nValid values for days are:\n\n* `mon` - Monday\n* `tue` - Tuesday\n* `wed` - Wednesday\n* `thu` - Thursday\n* `fri` - Friday\n* `sat` - Saturday\n* `sun` - Sunday\n\n**Note:** Urgent updates may be applied outside of the preferred maintenance window and without notice. `connection_draining_timeout` is always respected.\n\nIf unspecified, non-urgent forced replacements will occur at night in the region.","description_kind":"markdown","optional":true,"computed":true},"preserve_host_header":{"type":"bool","description":"If true, the load balancer preserves the original Host header value in requests forwarded to targets. This is useful when your backend application needs to know the original hostname requested by the client, for example with virtual hosting or when generating absolute URLs.","description_kind":"markdown","optional":true,"computed":true},"security_groups":{"type":["set","string"],"description":"List of security group IDs to assign to the load balancer. The security groups must allow inbound traffic on the listener ports and health check ports. They should also allow outbound traffic to your target instances or IP addresses, and the HLB control plane.","description_kind":"markdown","optional":true},"state":{"type":"string","description":"The state of the load balancer","description_kind":"plain","computed":true},"subnets":{"type":["set","string"],"description":"List of subnet IDs to attach to the load balancer. The subnets must be in at least two different Availability Zones for high availability. For internal load balancers, these must be private subnets. For internet-facing load balancers, these must be public subnets.","description_kind":"markdown","required":true},"tags":{"type":["map","string"],"description":"A map of tags to assign to the load balancer and related resources. Tags are key-value pairs that help you organize and categorize your resources. Common uses include:\n\n* Environment identification (e.g., `environment = \"production\"`)\n* Cost allocation (e.g., `project = \"mobile-app\"`)\n* Security/compliance labeling\n* Automation and operations management\nA maximum of 5 tags can be assigned (AWS Marketplace limitation).","description_kind":"markdown","optional":true},"xff_header_processing_mode":{"type":"string","description":"Controls how the load balancer handles the X-Forwarded-For header. Valid values:\n\n* `append` (default) - Appends the client IP to any existing X-Forwarded-For header\n* `preserve` - Keeps the original X-Forwarded-For header unchanged\n* `remove` - Removes any existing X-Forwarded-For header\n\nThis header is important for identifying the original client IP address when requests pass through the load balancer.","description_kind":"markdown","optional":true,"computed":true},"zone_id":{"type":"string","description":"The ID of the zone","description_kind":"plain","required":true},"zone_name":{"type":"string","description":"The name of the zone","description_kind":"plain","required":true}},"description":"Manages a Hero Load Balancer (HLB) resource. HLB is a managed load balancer service that distributes incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones. This resource allows you to create and manage load balancers with features like:\n\n* HTTP/2 support\n* Access logging\n* Cross-zone load balancing\n* Custom launch configurations\n* Flexible IP address types\n\nFor detailed documentation and examples, see the [HLB Provider Documentation](../index.md).","description_kind":"markdown"}}}}}}
